#!/usr/bin/perl

use Mysql;
use Crypt::PasswdMD5;

my $crypted_pass = "";
my $salt = "";

$| = 1 ;

%ENV = () ;

# read from the 3rd filehandle qpopup sends user / pass to us that way.
my( $len, $buf, ) ;
open( USER, "<&=3" )
  or exit( -3 ) ;
$len = read( USER, $buf, 512 ) ;
close USER ;
exit(-3) if $len < 4 ;

# extract null-terminated user/pass pair from buf
my( $user, $pass ) = split /\x00/, $buf ;
#$user = lc $user ;
$buf = "\x00" x $len ;

# check password

my $host = "localhost";
my $database = "radius";
my $table = "personaldata";
my $usuario = "root";
my $password = "4c0r4z4d0";
my $password_tabla = "";
my $password_shadow = "";
my $errmsg = "";
my $dbh = "";
my $sth = "";

$dbh = Mysql->connect($host, $database, $usuario, $password);
$errmsg = Mysql->errmsg();

if ($errmsg ne "")
{
	exit(-4);
}

my $sql_statement = "SELECT Estado FROM $table WHERE E_mails like '%,".$user.",%' OR E_mails like '".$user.",%' OR E_mails like '%,".$user."' OR E_mails like '".$user."'";
$sth = $dbh->query($sql_statement)
or exit(-4);

if ($sth->fetchrow ne "Activo")
{
	exit(-4);
}

#$table = "radcheck";
#$sql_statement = "SELECT Value FROM $table WHERE UserName like '".$user."' AND Attribute like 'Password'";
#$sth = $dbh->query($sql_statement)
#or exit(-4);

## No esta en la base, busca en el sistema operativo
#if ($sth->numrows == 0)
#{
#	$password_shadow = (getspnam( $user ))[ 1 ] ;
	$password_shadow = `/bin/grep ^$user: /etc/shadow | /usr/bin/cut -d: -f2`;
	($password_shadow) = ($password_shadow =~ /([^\n]*)/);

	($salt) = ($password_shadow =~ /(.{11})/);
	$crypted_pass = unix_md5_crypt($pass, $salt);
	if ($password_shadow eq $crypted_pass)
	{
		@ENV{ 'USER', 'UID', 'GID', 'HOME', 'SHELL', } = (getpwnam( $user ))[ 0, 2, 3, 7, 8 ] ;
		exit(-4) unless $ENV{UID} ;
		$ENV{HOME} =~ m!((?:/\w[-_.\w]+)+)! ;
		$ENV{HOME} = $1 ;
		chdir $ENV{HOME} ;
		$> = $ENV{UID} ;
		$) = $ENV{GID} ;
		&log_entry ("Usuario $user valido correctamente");
		exec @ARGV;
	}
#}
## Esta en la base, chequea la password
#else
#{
#	$password_tabla = $sth->fetchrow;
#
#	if ($pass eq $password_tabla)
#	{
#		@ENV{ 'USER', 'UID', 'GID', 'HOME', 'SHELL', } = (getpwnam( $user ))[ 0, 2, 3, 7, 8 ] ;
#		exit(-4) unless $ENV{UID} ;
#		$ENV{HOME} =~ m!((?:/\w[-_.\w]+)+)! ;
#		$ENV{HOME} = $1 ;
#		chdir $ENV{HOME} ;
#		$> = $ENV{UID} ;
#		$) = $ENV{GID} ;
#		&log_entry ("Usuario $user valido correctamente");
#		exec @ARGV;
#	}
#}

&log_entry ("Usuario $user no valido correctamente");
exit( -4 ) ;


sub log_entry
{
	my $logfile = "/var/log/checkpassword.log";
	my $date = `/bin/date +%y%m%d%H%M%S`;
	($date) = ($date =~ /([^\n]*)/);

	local (@linea) = @_;

	open (LOG, ">> $logfile");
	print LOG $date, " - ", $linea[0], "\n";
	close (LOG);
}
